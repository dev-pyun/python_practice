불 대수 : 논리적 연산을 위한 기호 True & False

and ( 2개 다 맞아야 'True')

or (2 중 하나만 맞아도 'True')

not (연산 결과값을 반전시킴. not True --> False)

*주의*
True는 반드시 대문자 T 사용! False도 마찬가지!




비트연산자로 대체는 가능하나, 비트연산자는 말그대로 비트 단위의 연산을 위한 것!
반면 (and or 등등)논리연산자는 True, False와 같은 논리값을 계산하는데 사용.
목적에 맞게 사용하는 것이 좋아용

불 대수와 불린의 차이는 거의 없다고 봐도 무방함!
다만, 불린은 자료형(int, float, str과 같이)을 나타내는 것임.

// 표준 C언어에는 boolean 타입이 없기 때문에 0(정수), '\0'(문자), NULL(포인터) 등이 '거짓'을 대신합니다.
#include <stdio.h>

int main() {

    if (1) {
        printf("Hello, C!\n");
    }
    while (0) {
        printf("이 while문은 실행될 일이 없습니다.");
    }

    return 0;
}

// 반면 대부분의 언어에서는 boolean 타입을 지원합니다. Python의 경우를 볼까요?
true_variable = True
false_variable = False

if true_variable:
    print('Hello, Python!')

while false_variable:
    print('이 while문 또한 실행되지 않습니다.')

즉, 불 대수를 표현하는 것이 '불린형'변수라고 볼 수 있음.
but 굳이 boolean으로 불 대수를 표현할 필요는 X!
사과를 한글로 '사과'라고 쓸 수 있지만, 'sagwa'라고 써도 되는 것처럼!